Bats = read.csv(file="Bats_data.csv", header=T, stringsAsFactors=F)
summarise(Bats, Mean.Activity=mean(Activity))
library(dplyr)
summarise(Bats, Mean.Activity=mean(Activity))
summarise(Bats, mean.activity=mean(Activity),       # mean
min.Activity=min(Activity),               # minimum
max.Activity=max(Activity),               # maximum
med.Activity=median(Activity),            # median
sd.Activity=sd(Activity),                 # standard deviation
var.Activity=var(Activity),               # variance
n.Activity=n(),                           # sample size
se.Activity=sd.Activity/sqrt(n.Activity), # standard error
IQR.Activity=IQR(Activity))
summarise(Bats, first.site=first(Site),     # first value in Site variable
last.Site=last(Site),             # last value in Site variable
third.Site=nth(Site, 3),          # nth value of Site
n.Sites=n_distinct(Site))
Bats_by_Treatment <- group_by(Bats, Treatment.thinned)
Treatment.summary <- summarise(Bats_by_Treatment,
mean.Activity=mean(Activity),             #mean
min.Activity=min(Activity),               #minimum
max.Activity=max(Activity),               #maximum
med.Activity=median(Activity),            #median
sd.Activity=sd(Activity),                 #standard deviation
var.Activity=var(Activity),               #variance
n.Activity=n(),                           #sample size
se.Activity=sd.Activity/sqrt(n.Activity), #standard error
IQR.Activity=IQR(Activity))
View(Treatment.summary)
View(Treatment.summary)
View(Treatment.summary)
Bats$Activity2 <- Bats$Activity
Bats$Activity2[1:4] <- rep(NA, 4)
summarise(Bats, mean.Activity=mean(Activity2))
summarise(Bats, mean.Activity=mean(Activity2, na.rm=TRUE))
Bat_sim <- as.data.frame(cbind(Site = c("A","B","C","D","E"),
Activity =c(62,29,30,23,24)),stringsAsFactors = F)
Tree_sim <- as.data.frame(cbind(Site = c("D","E","F","G","H"),
Tree_density=c(525,390,477,778,817)),stringsAsFactors = F)
print(Bat_sim)
print(Tree_sim)
Bat_withTree_inn.join <- inner_join(Bat_sim, Tree_sim, by="Site")
library("dplyr", lib.loc="\\\\INFPWFS504.ad.unsw.edu.au/Staff027$/z9705066/R/win-library/3.2")
Bat_withTree_left.join <- left_join(Bat_sim, Tree_sim, by="Site")
print(Bat_withTree_left.join)
Bat_withTree_right.join <- right_join(Bat_sim, Tree_sim, by="Site")
print(Bat_withTree_right.join)
library(dplyr)
Bats = read.csv(file="Bats_data.csv", header=T, stringsAsFactors=F)
Bats_by_Treatment <- group_by(Bats, Treatment.thinned)
Treatment.summary <- summarise(Bats_by_Treatment,
mean.Activity=mean(Activity),             # mean
min.Activity=min(Activity),               # minimum
max.Activity=max(Activity),               # maximum
med.Activity=median(Activity),            # median
sd.Activity=sd(Activity),                 # standard deviation
var.Activity=var(Activity),               # variance
n.Activity=n(),                           # sample size
se.Activity=sd.Activity/sqrt(n.Activity), # standard error
IQR.Activity=IQR(Activity))               # interquartile range
View(Treatment.summary)
library(ggplot2)
data(iris)
library(dplyr)
Iris_summary <- iris %>% # the names of the new data frame and the data frame to be summarised
group_by(Species) %>%   # the grouping variable
summarise(mean_PL = mean(Petal.Length),  # calculates the mean
sd_PL = sd(Petal.Length), # calculates the standard deviation
n = n()) # calculates the sample size per group
View(Iris_summary)
Iris_summary <- iris %>% # the names of the new data frame and the data frame to be summarised
group_by(Species) %>%   # the grouping variable
summarise(mean_PL = mean(Petal.Length),  # calculates the mean
sd_PL = sd(Petal.Length), # calculates the standard deviation
n = n(),  # calculates the sample size per group
SE_PL = sd(Petal.length/sqrt(n()))) # calculates the standard error
Iris_summary <- iris %>% # the names of the new data frame and the data frame to be summarised
group_by(Species) %>%   # the grouping variable
summarise(mean_PL = mean(Petal.Length),  # calculates the mean
sd_PL = sd(Petal.Length), # calculates the standard deviation
n = n(),  # calculates the sample size per group
SE_PL = sd(Petal.Length/sqrt(n())))
View(Treatment.summary)
View(Iris_summary)
IrisPlot <- ggplot(Iris_summary, aes(Species, mean_PL)) + geom_bar(stat="identity") +  geom_errorbar(aes(ymin=mean_PL-SE_PL, ymax=mean_PL+SE_PL),width=0.2)
print(IrisPlot + labs(y="Petal length (cm)", x = "Species") + theme_classic())
IrisPlot <- ggplot(Iris_summary, aes(Species, mean_PL)) + geom_bar(stat="identity") +  geom_errorbar(aes(ymin=mean_PL-sd_PL, ymax=mean_PL+sd_PL),width=0.2)
print(IrisPlot + labs(y="Petal length (cm)", x = "Species") + theme_classic())
